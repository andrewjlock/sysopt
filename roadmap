# Codesign Framework Roadmap

0.0.1. Basic Functionality:
    - Build parameterised blocks
    - Define input output relationships between blocks
    - Define parametric constraints between blocks
    - Numerical evaluate input-state-output-parameters for blocks
    - Automatically generate and evaluate functions on composite blocks
    - Simulate ODES/DAES and store the trajectories.
    - Core Blocks: Gain, Oscillator, Mixer
    - Example Systems: Duffing Oscillator, Powered Ballistic Motion
    - Tutorials: Building simple systems, composition, simulation, plotting
    - Demos: building + running a parameter sweep of powered ballistic motion

0.0.2. Optimisation:
    - Define parameter optimisation problems - loss function and constraints
    - Pass the parameter optimisation problem into symbolic framework (casadi)
      for solving the corresponding NLP
    - Be able to optimise minimum time problems.
    - Set up CI and codereview pipelines.
    - Core blocks: Integrator, Differentiator, LQR, PID
    - Example Blocks: CartPole System, 3DOF HSV
    - Tutorials: Solving a simple parameter optimisation problem.

0.0.3. Tools Integration and Fitting:
    - Serialise models and record solutions progress
    - Warm-start capabilities.
    - Connect with UQ CFD/Geometry pipleine
    - Implement matlab API for interfacing with GPOPS
    - Work out an approach to deal with systems with internal models of
      subsystems, and that the jacobian will need to be approximated.

0.0.4. Symbolic Toolkit:
    - Mixing parameter in with numpy arrays.
    - Units checking for in/out/parameters
    - re-evaluate CasAdi/matlab/gpops

0.0.5: Extended systems:
    - Set a seed for a simulation
    - Generate Noise
    - Implement integration schemes to handle noisy DAE's
    - Implement clocking schemes for hybrid systems.